//
//  IUOBConstants.swift
//  iUOB 2
//
//  Created by Miqdad Altaitoon on 9/13/16.
//  Copyright Â© 2016 Miqdad Altaitoon. All rights reserved.
//  Constants file

import Foundation
import UIKit
import CoreLocation

struct Constants {
    
    static let baseURL = "https://www.online.uob.edu.bh"   // change for the domain you want e.g. uob :-]
    
    static let sakheerLocation = Location(latitude: 26.051588, longitude: 50.513387)
    static let isaTownLocation = Location(latitude: 26.165126, longitude: 50.545274)
    
    static let depCodeMapping = ["ACC": "031", "ACCA": "A17", "ACCM": "131", "AH": "S20", "ALH": "S19", "AMST": "108", "ARAB": "047", "ARABA": "A24", "ARABM": "147", "ARCG": "292", "ART": "079", "BAA": "A40", "BIOLS": "087", "BIONU": "187", "BIS": "058", "CEA": "A25", "CEG": "112", "CENG": "325", "CGS": "S25", "CHE": "013", "CHEMY": "086", "CHENG": "353", "CHL": "114", "COM": "128", "CSA": "A13", "CSC": "081", "DH": "S23", "ECON": "034", "ECONA": "A18", "ECONM": "134", "EDAR": "366", "EDEG": "166", "EDPS": "177", "EDTC": "266", "EDU": "S30", "EEDA": "A29", "EEG": "110", "EENG": "345", "ELE": "S12", "ENG": "S28", "ENGG": "377", "ENGL": "049", "ENGL.": "D11", "ENGLA": "A11", "ENGLM": "149", "ENGLU": "009", "EPD": "S26", "ESD": "444", "ESP.": "D16", "ETDA": "A33", "EVALU": "195", "FA": "179", "FIN": "032", "FINA": "A21", "FINM": "132", "FOUN": "466", "FREN": "078", "GEOG": "076", "GERM": "107", "HIST": "075", "HISTO": "175", "HRLC": "771", "IEN": "002", "INTD": "191", "ISLM": "074", "IT": "558", "ITBIS": "158", "ITCE": "333", "ITCS": "222", "ITIS": "458", "JAPN": "100", "LAW": "080", "LAW.": "808", "LFS": "S24", "MATHA": "A12", "MATHS": "083", "MATHS.": "D15", "MCM": "228", "MEDA": "A30", "MEG": "111", "MENG": "314", "MGT": "030", "MGTA": "A15", "MISA": "A16", "MKT": "033", "MKTA": "A20", "MLS": "S32", "MLT": "S21", "MPHYS": "285", "NUR": "S11", "OMA": "A60", "PHA": "S18", "PHAM": "S31", "PHED": "001", "PHEDE": "200", "PHTY": "220", "PHYCS": "085", "PHYCSA": "A31", "PICDA": "A34", "PICENG": "355", "PSYC": "077", "PSYCH": "277", "QM": "035", "RAD": "S22", "SBF": "777", "SBS": "S27", "SOCIO": "173", "STAT": "096", "STATA": "A19", "TC1AR": "E27", "TC1ART": "E40", "TC1EN": "E28", "TC1IS": "E44", "TC1MA": "E25", "TC1MAT": "E39", "TC1SC": "E26", "TC1SCT": "E24", "TC2AR": "E35", "TC2ART": "E36", "TC2EN": "E33", "TC2ENT": "E34", "TC2IS": "E37", "TC2IST": "E38", "TC2MA": "E32", "TC2MAT": "E42", "TC2SC": "E31", "TC2SCT": "E41", "TCDE": "E12", "TCDEE": "E18", "TCDEGS": "E14", "TCDEIT": "E23", "TCDEM": "E13", "TCEL": "E45", "TCFN": "E55", "TCPB": "E11", "TOUR": "027", "TRAN": "082"]
    
    
    static let allCourses = [
        "ACC112","ACC113","ACC211","ACC221","ACC231","ACC310","ACC311","ACC325","ACC332","ACC341","ACC410","ACC411","ACC416","ACC451","ACC470","ACC491","ACC610","ACCA121","ACCA221","AMST202","AMST212","AMST213","AMST214","AMST411","AMST413","ARAB100","ARAB110","ARAB111","ARAB119","ARAB141","ARAB181","ARAB210","ARAB212","ARAB213","ARAB216","ARAB227","ARAB237","ARAB242","ARAB313","ARAB315","ARAB325","ARAB328","ARAB333","ARAB334","ARAB337","ARAB338","ARAB339","ARAB341","ARAB343","ARAB353","ARAB414","ARAB416","ARAB424","ARAB426","ARAB437","ARAB439","ARAB441","ARAB443","ARAB445","ARAB446","ARAB447","ARAB448","ARAB454","ARAB488","ARABA111","ARABM535","ARABM548","ARABM552","ARABM558","ARABM560","ARCG120","ARCG121","ARCG220","ARCG221","ARCG222","ARCG223","ARCG224","ARCG320","ARCG321","ARCG322","ARCG323","ARCG420","ARCG421","ARCG422","ARCG520","ARCG521","ARCG522","ARCG550","ARCG553","ARCG555","ARCG557","ARCG558","ARCG559","ARCG561","ART112","ART133","ART141","ART221","BAA110","BAA120","BAA121","BAA122","BAA230","BAA231","BAA250","BAA251","BAA260","BIOLS102","BIOLS103","BIOLS171","BIOLS175","BIOLS222","BIOLS232","BIOLS315","BIOLS320","BIOLS352","BIOLS370","BIOLS371","BIOLS383","BIOLS409","BIOLS424","BIOLS427","BIOLS442","BIOLS451","BIOLS454","BIOLS456","BIOLS463","BIOLS464","BIOLS465","BIOLS481","BIS202","BIS315","CEA112","CEA122","CEA123","CEA124","CEA233","CEA242","CEG211","CEG225","CEG315","CEG325","CENG131","CENG160","CENG200","CENG201","CENG202","CENG211","CENG212","CENG231","CENG242","CENG290","CENG301","CENG302","CENG311","CENG312","CENG314","CENG321","CENG322","CENG331","CENG341","CENG400","CENG406","CENG411","CENG415","CENG417","CENG421","CENG426","CENG431","CENG435","CENG436","CENG442","CENG451","CENG491","CHEMY101","CHEMY102","CHEMY106","CHEMY211","CHEMY220","CHEMY221","CHEMY223","CHEMY224","CHEMY310","CHEMY312","CHEMY313","CHEMY322","CHEMY331","CHEMY341","CHEMY348","CHEMY351","CHEMY411","CHEMY421","CHEMY435","CHEMYA101","CHENG111","CHENG211","CHENG212","CHENG213","CHENG214","CHENG242","CHENG290","CHENG301","CHENG312","CHENG313","CHENG314","CHENG315","CHENG316","CHENG323","CHENG324","CHENG325","CHENG400","CHENG415","CHENG421","CHENG422","CHENG423","CHENG425","CHENG443","CHENG445","CHENG460","CHENG491","CHL101","COM524","COM525","COM526","COM540","COM564","COM565","COM566","COM570","COM590","CSA101","CSA106","CSA111","CSA112","CSA113","CSA114","CSA121","CSA126","CSA131","CSA136","CSA211","CSA212","CSA213","CSA214","CSA217","CSA218","CSA219","CSA223","CSA231","CSA236","CSA241","CSA266","CSA271","CSA276","CSC103","ECON131","ECON140","ECON141","ECON248","ECON340","ECON341","ECON440","ECON441","ECON640","ECONA121","EDAR126","EDEG211","EDPS241","EDPS285","EDTC100","EEDA101","EEDA102","EEDA109","EEDA202","EEDA211","EEDA212","EEDA213","EEDA214","EEDA231","EEDA241","EEDA242","EEDA243","EEDA244","EEDA280","EEG271","EEG510","EEG554","EEG577","EEG580","EENG100","EENG109","EENG200","EENG204","EENG205","EENG209","EENG242","EENG251","EENG259","EENG261","EENG262","EENG269","EENG271","EENG290","EENG301","EENG302","EENG311","EENG333","EENG334","EENG341","EENG342","EENG343","EENG349","EENG352","EENG353","EENG355","EENG361","EENG364","EENG371","EENG372","EENG373","EENG381","EENG400","EENG412","EENG413","EENG414","EENG415","EENG416","EENG417","EENG433","EENG438","EENG444","EENG447","EENG448","EENG449","EENG451","EENG461","EENG462","EENG463","EENG470","EENG472","EENG473","EENG479","EENG483","EENG485","EENG491","ENGL101","ENGL102","ENGL111","ENGL112","ENGL114","ENGL125","ENGL126","ENGL130","ENGL135","ENGL145","ENGL146","ENGL154","ENGL155","ENGL191","ENGL192","ENGL205","ENGL215","ENGL219","ENGL235","ENGL250","ENGL305","ENGL308","ENGL309","ENGL313","ENGL314","ENGL315","ENGL331","ENGL340","ENGL341","ENGL342","ENGL345","ENGL346","ENGL350","ENGL405","ENGL419","ENGL440","ENGL444","ENGL446","ENGL450","ENGL540","ENGL541","ENGL542","ENGL543","ENGL544","ENGL545","ENGLA111","ENGLA112","ENGLA120","ENGLA210","ENGLM401","ENGLM402","ENGLU203","ESD524","ESD538","ETDA161","EVALU558","EVALU559","FIN220","FIN221","FIN222","FIN320","FIN323","FIN331","FIN411","FIN424","FIN425","FIN426","FIN428","FIN435","FIN620","FIN623","FIN625","FIN629","FIN698","FINA200","FOUN321","FREN141","FREN142","FREN231","FREN232","FREN310","FREN312","FREN313","FREN411","GEOG102","GERM101","HIST122","HISTO191","HISTO212","HISTO225","HISTO230","HISTO281","HISTO301","HISTO302","HISTO305","HISTO306","HISTO309","HISTO311","HISTO407","HISTO408","HISTO409","HISTO413","HISTO414","HISTO415","HISTO418","HISTO419","HISTO429","IEN509","IEN511","IEN536","INTD120","INTD121","INTD220","INTD221","INTD222","INTD223","INTD224","INTD320","INTD321","INTD322","INTD323","INTD324","INTD420","INTD421","INTD422","INTD424","INTD425","ISLM101","ISLM114","ISLM136","ISLM141","ISLM217","ISLM231","ISLM240","ISLM241","ISLM243","ISLM252","ISLM281","ISLM305","ISLM316","ISLM317","ISLM321","ISLM323","ISLM326","ISLM327","ISLM333","ISLM339","ISLM344","ISLM346","ISLM401","ISLM414","ISLM415","ISLM421","ISLM436","ISLM445","ISLM446","ISLM448","ISLM453","ISLM463","ISLM474","ISLM475","ISLM488","ITBIS105","ITBIS211","ITBIS251","ITBIS311","ITBIS322","ITBIS324","ITBIS341","ITBIS351","ITBIS373","ITBIS385","ITBIS393","ITBIS395","ITBIS396","ITBIS420","ITBIS431","ITBIS435","ITBIS438","ITBIS445","ITBIS450","ITBIS465","ITBIS472","ITBIS492","ITBIS494","ITBIS499","ITCE202","ITCE250","ITCE251","ITCE260","ITCE263","ITCE272","ITCE300","ITCE311","ITCE313","ITCE314","ITCE315","ITCE320","ITCE321","ITCE341","ITCE344","ITCE351","ITCE352","ITCE362","ITCE363","ITCE380","ITCE414","ITCE416","ITCE431","ITCE436","ITCE444","ITCE455","ITCE470","ITCE471","ITCE472","ITCE474","ITCE498","ITCS102","ITCS103","ITCS104","ITCS111","ITCS112","ITCS113","ITCS114","ITCS215","ITCS216","ITCS241","ITCS242","ITCS251","ITCS252","ITCS253","ITCS311","ITCS312","ITCS314","ITCS315","ITCS322","ITCS323","ITCS332","ITCS341","ITCS345","ITCS346","ITCS351","ITCS373","ITCS385","ITCS390","ITCS393","ITCS395","ITCS399","ITCS412","ITCS420","ITCS439","ITCS447","ITCS452","ITCS473","ITCS479","ITCS490","ITCS495","ITIS101","ITIS102","ITIS211","ITIS216","ITIS253","ITIS311","ITIS312","ITIS313","ITIS314","ITIS331","ITIS341","ITIS342","ITIS343","ITIS351","ITIS411","ITIS412","ITIS413","ITIS441","ITIS442","ITIS443","ITIS444","ITIS445","ITIS453","ITIS461","ITIS462","ITIS464","ITIS475","ITIS476","ITIS482","ITIS499","JAPN101","LAW101","LAW102","LAW104","LAW106","LAW107","LAW109","LAW110","LAW210","LAW211","LAW214","LAW215","LAW221","LAW222","LAW224","LAW225","LAW227","LAW238","LAW302","LAW307","LAW312","LAW315","LAW317","LAW318","LAW322","LAW324","LAW325","LAW327","LAW328","LAW402","LAW403","LAW407","LAW409","LAW412","LAW414","LAW415","LAW416","LAW417","LAW418","LAW419","LAW422","LAW423","LAW425","LAW427","LAW429","LAW499","LAW511","LAW513","LAW516","LAW522","LAW524","LAW529","MATHA111","MATHS101","MATHS102","MATHS103","MATHS104","MATHS108","MATHS121","MATHS122","MATHS203","MATHS204","MATHS205","MATHS211","MATHS253","MATHS303","MATHS304","MATHS305","MATHS307","MATHS311","MATHS312","MATHS331","MATHS341","MATHS342","MATHS381","MATHS385","MATHS395","MATHS401","MATHS402","MATHS415","MATHS417","MATHS452","MATHS461","MATHS500","MATHS562","MATHS582","MCM110","MCM120","MCM130","MCM140","MCM150","MCM201","MCM202","MCM210","MCM220","MCM230","MCM250","MCM260","MCM301","MCM302","MCM310","MCM311","MCM312","MCM313","MCM314","MCM315","MCM316","MCM318","MCM320","MCM321","MCM322","MCM323","MCM324","MCM325","MCM330","MCM331","MCM332","MCM333","MCM334","MCM336","MCM340","MCM341","MCM342","MCM345","MCM350","MCM351","MCM352","MCM353","MCM354","MCM355","MCM356","MCM360","MCM361","MCM362","MCM401","MCM410","MCM411","MCM412","MCM413","MCM414","MCM415","MCM420","MCM421","MCM422","MCM423","MCM425","MCM430","MCM431","MCM432","MCM433","MCM440","MCM441","MCM442","MCM443","MCM450","MCM451","MCM452","MCM453","MCM454","MCM460","MCM461","MEDA111","MEDA112","MEDA121","MEDA161","MEDA162","MEDA213","MEDA214","MEDA215","MEDA222","MEDA223","MEDA231","MEDA232","MEDA233","MEDA271","MEG435","MEG501","MEG514","MENG110","MENG160","MENG163","MENG201","MENG210","MENG230","MENG231","MENG235","MENG242","MENG263","MENG274","MENG290","MENG300","MENG310","MENG334","MENG335","MENG371","MENG373","MENG375","MENG380","MENG381","MENG384","MENG400","MENG420","MENG423","MENG430","MENG440","MENG442","MENG473","MENG475","MENG485","MENG490","MENG491","MGT131","MGT230","MGT233","MGT236","MGT239","MGT340","MGT341","MGT429","MGT430","MGT433","MGT434","MGT437","MGT439","MGT446","MGT447","MGT460","MGT501","MGT630","MGT632","MGT633","MGT635","MGT638","MGT639","MGT698","MGTA121","MGTA140","MGTA160","MGTA222","MGTA231","MGTA240","MGTA242","MGTA247","MGTA251","MGTA260","MGTA262","MGTA264","MGTA290","MGTA299","MISA121","MISA123","MISA138","MISA210","MISA233","MISA240","MISA244","MISA260","MKT261","MKT263","MKT264","MKT268","MKT361","MKT362","MKT364","MKT367","MKT460","MKT461","MKT462","MKT463","MKT464","MKT465","MKT660","MKTA221","MPHYS325","MPHYS372","MPHYS374","MPHYS476","MPHYS477","OMA121","OMA140","OMA160","OMA222","OMA231","OMA240","OMA242","OMA247","OMA260","OMA262","PHED555","PHED572","PHED577","PHED583","PHED584","PHED704","PHED707","PHED709","PHED712","PHED724","PHEDE101","PHEDE102","PHEDE103","PHEDE104","PHEDE106","PHEDE114","PHEDE115","PHEDE116","PHEDE117","PHEDE118","PHEDE200","PHEDE201","PHEDE202","PHEDE203","PHEDE204","PHEDE205","PHEDE206","PHEDE207","PHEDE208","PHEDE209","PHEDE210","PHEDE211","PHEDE213","PHEDE216","PHEDE217","PHEDE218","PHEDE301","PHEDE302","PHEDE304","PHEDE305","PHEDE307","PHEDE308","PHEDE309","PHEDE310","PHEDE312","PHEDE313","PHEDE314","PHEDE315","PHEDE317","PHEDE401","PHEDE402","PHEDE404","PHEDE411","PHEDE418","PHEDE419","PHTY180","PHTY286","PHTY291","PHTY294","PHTY298","PHTY382","PHTY384","PHTY387","PHTY388","PHTY394","PHTY396","PHTY494","PHTY499","PHYCS101","PHYCS102","PHYCS104","PHYCS106","PHYCS111","PHYCS181","PHYCS209","PHYCS210","PHYCS221","PHYCS222","PHYCS241","PHYCS324","PHYCS333","PHYCS334","PHYCS351","PHYCS353","PHYCS425","PHYCS428","PHYCS432","PHYCS471","PHYCS484","PHYCS526","PHYCS541","PHYCS551","PHYCS553","PHYCS554","PHYCS558","PHYCSA101","PICDA111","PICDA121","PICDA141","PICDA212","PICDA222","PICDA223","PICDA224","PICDA225","PICDA226","PICDA231","PICDA232","PICDA233","PICENG111","PICENG212","PICENG213","PICENG214","PICENG215","PICENG216","PICENG226","PICENG242","PICENG290","PICENG321","PICENG322","PICENG325","PICENG326","PICENG331","PICENG332","PICENG400","PICENG411","PICENG422","PICENG425","PICENG433","PICENG434","PICENG464","PICENG491","PSYC103","PSYC120","PSYC211","PSYC221","PSYC224","PSYC251","PSYC290","PSYC323","PSYC324","PSYC325","PSYC347","PSYC417","PSYCH561","PSYCH562","PSYCH563","PSYCH570","PSYCH571","PSYCH591","QM250","QM350","QM353","QM650","SBF150","SBF250","SBF260","SBF270","SOCIO161","SOCIO181","SOCIO191","SOCIO221","SOCIO222","SOCIO223","SOCIO224","SOCIO225","SOCIO226","SOCIO281","SOCIO321","SOCIO324","SOCIO326","SOCIO328","SOCIO329","SOCIO332","SOCIO333","SOCIO337","SOCIO341","SOCIO382","SOCIO420","SOCIO422","SOCIO424","SOCIO425","SOCIO426","SOCIO427","SOCIO428","STAT105","STAT271","STAT272","STAT273","STAT371","STAT372","STAT373","STAT374","STAT378","STAT381","STAT385","STAT391","STAT392","STAT393","STAT394","STAT473","STAT474","STAT476","STAT479","STATA231","TOUR101","TOUR102","TOUR211","TOUR220","TOUR231","TOUR315","TOUR355","TOUR363","TOUR380","TOUR418","TOUR421","TOUR463","TOUR498","TRAN208","TRAN303","TRAN304","TRAN305","TRAN401","TRAN403","TRAN404", "HRLC107"
    ]
    
    static func addToUserDefaults(_ course: String, section: String) {
        
        let defaults: UserDefaults = UserDefaults(suiteName: "group.com.muqdd.iuob")!
        //let defaults = UserDefaults.standard
        var courses = defaults.object(forKey: "SavedCoursesArray") as? [String] ?? [String]()
        var sections = defaults.object(forKey: "SavedSectionsArray") as? [String] ?? [String]()
        
        courses.append(course)
        sections.append(section)
        
        defaults.set(courses, forKey: "SavedCoursesArray")
        defaults.set(sections, forKey: "SavedSectionsArray")
        
        defaults.synchronize()
    }
    
    static func deleteFromUserDefaults(index: Int) {
        
        let defaults: UserDefaults = UserDefaults(suiteName: "group.com.muqdd.iuob")!
        var courses = defaults.object(forKey: "SavedCoursesArray") as? [String] ?? [String]()
        var sections = defaults.object(forKey: "SavedSectionsArray") as? [String] ?? [String]()
        
        defaults.set(nil, forKey: "\(courses[index])-\(sections[index])")
        
        courses.remove(at: index)
        sections.remove(at: index)
        
        defaults.set(courses, forKey: "SavedCoursesArray")
        defaults.set(sections, forKey: "SavedSectionsArray")
        
        defaults.synchronize()
    }
    
    static func getCoursesAndSections() -> (courses: [String], sections: [String]) {
        
        let defaults: UserDefaults = UserDefaults(suiteName: "group.com.muqdd.iuob")!
        let courses = defaults.object(forKey: "SavedCoursesArray") as? [String] ?? [String]()
        let sections = defaults.object(forKey: "SavedSectionsArray") as? [String] ?? [String]()
        
        return (courses, sections)
    }
    
    //    static func suckCodes() {
    //
    //        let url = "\(Constants.baseURL)/cgi/enr/schedule2.abrv"
    //
    //        Alamofire.request(url, method: .get, parameters: ["prog": "1", "cyer": "2016", "csms": "1"])    // this shouldn't be hard coded
    //            .validate()
    //            .responseString { response in
    //
    //                if response.result.error == nil {
    //
    //                    if let doc = Kanna.HTML(html: response.result.value!, encoding: String.Encoding.utf8) {
    //
    //                        for link in doc.xpath("//a") {
    //
    //                            if let depName = link.text, let depURL = link["href"] {
    //
    //                                let inl = UOBParser.matchesForRegexInText("inll=.*?&", text: depURL)
    //                                var codee = inl.first!.substring(to: inl.first!.index(inl.first!.endIndex, offsetBy: -1))
    //                                codee = codee.substring(from: codee.index(codee.startIndex, offsetBy: 5))
    //
    //                                print("\"\(depName)\": \"\(codee)\", ")
    //                            }
    //                        }
    //                    }
    //
    //                } else {
    //                    print("error man")
    //                }
    //        }
    //    }
}

struct Location {
    let latitude: Double
    let longitude: Double
}

struct IUOBMarkers {
    
    let position: CLLocationCoordinate2D
    let title: String
    let description: String
    let location: String    // sakheer or isa town
}

struct Link {
    
    init(name: String, url: String) {
        self.name = name
        self.url = url
    }
    
    var name: String = ""
    var url: String = ""
}

extension UIColor {
    convenience init(red: Int, green: Int, blue: Int) {
        assert(red >= 0 && red <= 255, "Invalid red component")
        assert(green >= 0 && green <= 255, "Invalid green component")
        assert(blue >= 0 && blue <= 255, "Invalid blue component")
        
        self.init(red: CGFloat(red) / 255.0, green: CGFloat(green) / 255.0, blue: CGFloat(blue) / 255.0, alpha: 1.0)
    }
    
    convenience init(netHex:Int) {
        self.init(red:(netHex >> 16) & 0xff, green:(netHex >> 8) & 0xff, blue:netHex & 0xff)
    }
}
